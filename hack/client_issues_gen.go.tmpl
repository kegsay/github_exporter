// This file has been generated by hack/generate-client.sh
// Do not edit manually!

package client

import (
	"fmt"
)

const (
	MaxIssuesPerQuery = {{ .numFields }}
)

type numberedIssueQuery struct {
	RateLimit  rateLimit
	Repository struct {
{{- range .fields }}
		Issue{{ . }} *graphqlIssue `graphql:"issue{{ . }}: issue(number: $number{{ . }}) @include(if: $has{{ . }})"`
{{- end }}
	} `graphql:"repository(owner: $owner, name: $name)"`
}

func (r *numberedIssueQuery) GetAll() []graphqlIssue {
	result := []graphqlIssue{}

	for i := 0; i < MaxIssuesPerQuery; i++ {
		if issue := r.Get(i); issue != nil {
			result = append(result, *issue)
		}
	}

	return result
}

func (r *numberedIssueQuery) Get(index int) *graphqlIssue {
	switch index {
{{- range .fields }}
	case {{ . }}:
		return r.Repository.Issue{{ . }}
{{- end }}
	}

	panic(fmt.Sprintf("Index %d out of range [0,%d] when accessing issue request", index, MaxIssuesPerQuery-1))
}
