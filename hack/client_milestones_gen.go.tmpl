// This file has been generated by hack/generate-client.sh
// Do not edit manually!

package client

import (
	"fmt"
)

const (
	MaxMilestonesPerQuery = {{ .numFields }}
)

type numberedMilestoneQuery struct {
	RateLimit  rateLimit
	Repository struct {
{{- range .fields }}
		Milestone{{ . }} *graphqlMilestone `graphql:"milestone{{ . }}: milestone(number: $number{{ . }}) @include(if: $has{{ . }})"`
{{- end }}
	} `graphql:"repository(owner: $owner, name: $name)"`
}

func (r *numberedMilestoneQuery) GetAll() []graphqlMilestone {
	result := []graphqlMilestone{}

	for i := 0; i < MaxMilestonesPerQuery; i++ {
		if milestone := r.Get(i); milestone != nil {
			result = append(result, *milestone)
		}
	}

	return result
}

func (r *numberedMilestoneQuery) Get(index int) *graphqlMilestone {
	switch index {
{{- range .fields }}
	case {{ . }}:
		return r.Repository.Milestone{{ . }}
{{- end }}
	}

	panic(fmt.Sprintf("Index %d out of range [0,%d] when accessing milestone request", index, MaxMilestonesPerQuery-1))
}
